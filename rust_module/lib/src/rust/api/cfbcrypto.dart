// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:collection/collection.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `aes_encrypt`

class AesCfb {
  final U8Array16 key;
  final U8Array16 iv;

  const AesCfb.raw({
    required this.key,
    required this.iv,
  });

  Uint8List decrypt({required List<int> data}) => RustLib.instance.api
      .crateApiCfbcryptoAesCfbDecrypt(that: this, data: data);

  Uint8List encrypt({required List<int> data}) => RustLib.instance.api
      .crateApiCfbcryptoAesCfbEncrypt(that: this, data: data);

  factory AesCfb({required List<int> key, required List<int> iv}) =>
      RustLib.instance.api.crateApiCfbcryptoAesCfbNew(key: key, iv: iv);

  @override
  int get hashCode => key.hashCode ^ iv.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AesCfb &&
          runtimeType == other.runtimeType &&
          key == other.key &&
          iv == other.iv;
}

class U8Array16 extends NonGrowableListView<int> {
  static const arraySize = 16;

  @internal
  Uint8List get inner => _inner;
  final Uint8List _inner;

  U8Array16(this._inner)
      : assert(_inner.length == arraySize),
        super(_inner);

  U8Array16.init() : this(Uint8List(arraySize));
}
